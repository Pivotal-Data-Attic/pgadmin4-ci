- name: compile_gpdb_ubuntu
  plan:
  - aggregate:
    - get: gpdb_src
      trigger: true
    # - get: gpaddon_src
    - get: selenium-ubuntu-image
  - task: compile_gpdb
    file: pipeline/tasks/compile_gpdb.yml
    image: selenium-ubuntu-image
    params:
      IVYREPO_HOST: {{ivyrepo_host}}
      IVYREPO_REALM: {{ivyrepo_realm}}
      IVYREPO_USER: {{ivyrepo_user}}
      IVYREPO_PASSWD: {{ivyrepo_passwd}}
      CONFIGURE_FLAGS: {{configure_flags}}
      TARGET_OS: centos
      TARGET_OS_VERSION: 6
      BLD_TARGETS: "clients loaders"
  - aggregate:
    - put: bin_gpdb_ubuntu
      params:
        file: gpdb_artifacts/bin_gpdb.tar.gz

- name: gpcc_ubuntu
  plan:
  - aggregate:
    - get: gpdb_src
      passed: [compile_gpdb_ubuntu]
    - get: bin_gpdb
      resource: bin_gpdb_ubuntu
      passed: [compile_gpdb_ubuntu]
      trigger: true
    - get: selenium-ubuntu-image
  - task: gpcc
    file: pipeline/tasks/gpcc.yml
    image: selenium-ubuntu-image

- name: <%= source_name + render_branch_name %>-branch
  public: true
  plan:
  - get: placeholder-resource
  - task: kickoff-branch-build-placeholder
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ubuntu}
      run:
        path: echo
        args: ["going to run <%= render_branch_name %> branch builds"]

- name: <%= source_name + render_branch_name %>-javascript-tests
  public: true
  plan:
  - aggregate:
    - get: placeholder-resource
      passed: [<%= source_name + render_branch_name %>-branch]
    - get: <%= source_name + render_branch_name %>
      trigger: true
    - get: pipeline-ci
      trigger: true
  - task: karma-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: fotomut/pgadmin4, tag: 'python-3.6'}
      inputs:
        - name: <%= source_name + render_branch_name %>
        - name: pipeline-ci
      run:
        path: pipeline-ci/scripts/run_karma.sh
        args: ["<%= source_name + render_branch_name %>"]

- name: <%= source_name + render_branch_name %>-python-tests-on-postgres-9.2
  public: true
  plan:
  - aggregate:
    - get: <%= source_name + render_branch_name %>
      trigger: true
      passed: [<%= source_name + render_branch_name %>-javascript-tests]
    - get: pipeline-ci
      trigger: true
      passed: [<%= source_name + render_branch_name %>-javascript-tests]
#  - aggregate:
  - task: python-tests-on-9.2
    attempts: 3
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: gpccdocker/pgadmin, tag: 'postgres-9.2'}
      inputs:
        - name: <%= source_name + render_branch_name %>
        - name: pipeline-ci
      run:
        path: pipeline-ci/scripts/run_python_tests.sh
        args: ["<%= source_name + render_branch_name %>"]

- name: <%= source_name + render_branch_name %>-python-tests-on-postgres-9.6
  public: true
  plan:
  - aggregate:
    - get: <%= source_name + render_branch_name %>
      trigger: true
      passed: [<%= source_name + render_branch_name %>-javascript-tests]
    - get: pipeline-ci
      trigger: true
      passed: [<%= source_name + render_branch_name %>-javascript-tests]
  - task: python-tests-on-9.6
    attempts: 3
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: gpccdocker/pgadmin, tag: 'postgres-9.6'}
      inputs:
        - name: <%= source_name + render_branch_name %>
        - name: pipeline-ci
      run:
        path: pipeline-ci/scripts/run_python_tests.sh
        args: ["<%= source_name + render_branch_name %>"]

- name: <%= source_name + render_branch_name %>-python-tests-on-postgres-10
  public: true
  plan:
  - aggregate:
    - get: <%= source_name + render_branch_name %>
      trigger: true
      passed: [<%= source_name + render_branch_name %>-javascript-tests]
    - get: pipeline-ci
      trigger: true
      passed: [<%= source_name + render_branch_name %>-javascript-tests]
  - task: python-tests-on-10
    attempts: 3
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: gpccdocker/pgadmin, tag: 'postgres-10'}
      inputs:
        - name: <%= source_name + render_branch_name %>
        - name: pipeline-ci
      run:
        path: pipeline-ci/scripts/run_python_tests.sh
        args: ["<%= source_name + render_branch_name %>"]
