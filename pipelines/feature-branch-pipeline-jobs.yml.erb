- name: <%= source_name + render_branch_name %>-branch
  public: true
  plan:
  - get: placeholder-resource
  - task: kickoff-branch-build-placeholder
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ubuntu}
      run:
        path: echo
        args: ["going to run <%= render_branch_name %> branch builds"]

- name: <%= source_name + render_branch_name %>-javascript-tests
  public: true
  plan:
  - aggregate:
    - get: placeholder-resource
      passed: [<%= source_name + render_branch_name %>-branch]
    - get: <%= source_name + render_branch_name %>
      trigger: true
    - get: pipeline-ci
      trigger: true
  - task: karma-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pivotaldata/pgadmin, tag: 'karma-tests'}
      inputs:
        - name: <%= source_name + render_branch_name %>
        - name: pipeline-ci
      run:
        path: pipeline-ci/scripts/run_karma.sh
        args: ["<%= source_name + render_branch_name %>"]

- name: <%= source_name + render_branch_name %>-python-tests-on-<%=pyenv_version%>-on-postgres-9.2
  public: true
  plan:
  - aggregate:
    - get: <%= source_name + render_branch_name %>
      trigger: true
      passed: [<%= source_name + render_branch_name %>-javascript-tests]
    - get: pipeline-ci
      trigger: true
      passed: [<%= source_name + render_branch_name %>-javascript-tests]
  - task: python-tests-on-9.2
    attempts: 3
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pivotaldata/pgadmin, tag: 'postgres-9.2'}
      inputs:
        - name: <%= source_name + render_branch_name %>
        - name: pipeline-ci
      run:
        path: pipeline-ci/scripts/run_python_tests.sh
        args:
            - "<%= source_name + render_branch_name %>"
            - "<%= pyenv_version %>"

- name: <%= source_name + render_branch_name %>-python-tests-on-<%=pyenv_version%>-on-postgres-9.6
  public: true
  plan:
  - aggregate:
    - get: <%= source_name + render_branch_name %>
      trigger: true
      passed: [<%= source_name + render_branch_name %>-javascript-tests]
    - get: pipeline-ci
      trigger: true
      passed: [<%= source_name + render_branch_name %>-javascript-tests]
  - task: python-tests-on-9.6
    attempts: 3
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pivotaldata/pgadmin, tag: 'postgres-9.6'}
      inputs:
        - name: <%= source_name + render_branch_name %>
        - name: pipeline-ci
      run:
        path: pipeline-ci/scripts/run_python_tests.sh
        args:
            - "<%= source_name + render_branch_name %>"
            - "<%= pyenv_version %>"

- name: <%= source_name + render_branch_name %>-python-tests-on-<%=pyenv_version%>-on-postgres-10
  public: true
  plan:
  - aggregate:
    - get: <%= source_name + render_branch_name %>
      trigger: true
      passed: [<%= source_name + render_branch_name %>-javascript-tests]
    - get: pipeline-ci
      trigger: true
      passed: [<%= source_name + render_branch_name %>-javascript-tests]
  - task: python-tests-on-10
    attempts: 3
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pivotaldata/pgadmin, tag: 'postgres-10'}
      inputs:
        - name: <%= source_name + render_branch_name %>
        - name: pipeline-ci
      run:
        path: pipeline-ci/scripts/run_python_tests.sh
        args:
            - "<%= source_name + render_branch_name %>"
            - "<%= pyenv_version %>"

- name: <%= source_name + render_branch_name %>-python-tests-on-<%=pyenv_version%>-on-greenplum-5
  public: true
  plan:
  - aggregate:
    - get: <%= source_name + render_branch_name %>
      trigger: true
      passed: [<%= source_name + render_branch_name %>-javascript-tests]
    - get: pipeline-ci
      trigger: true
      passed: [<%= source_name + render_branch_name %>-javascript-tests]
  - task: python-tests-on-gpdb5
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pivotaldata/pgadmin, tag: 'gpdb-5'}
      inputs:
        - name: <%= source_name + render_branch_name %>
        - name: pipeline-ci
      run:
        path: pipeline-ci/scripts/run_gpdb_tests.sh
        args:
         - "<%= source_name + render_branch_name %>"
         - GPDB_HOST
         - GPDB_USERNAME
         - GPDB_PASSWORD
         - GPDB_PORT

- name: deploy-<%= source_name + render_branch_name %>-pws
  public: true
  plan:
  - aggregate:
    - get: <%= source_name + render_branch_name %>
      trigger: true
      passed: [<%= source_name + render_branch_name %>-python-tests-on-<%=pyenv_version%>-on-greenplum-5, <%= source_name + render_branch_name %>-python-tests-on-<%=pyenv_version%>-on-postgres-10,<%= source_name + render_branch_name %>-python-tests-on-<%=pyenv_version%>-on-postgres-9.6, <%= source_name + render_branch_name %>-python-tests-on-<%=pyenv_version%>-on-postgres-9.2]
    - get: pipeline-ci
      trigger: true
      passed: [<%= source_name + render_branch_name %>-python-tests-on-<%=pyenv_version%>-on-greenplum-5, <%= source_name + render_branch_name %>-python-tests-on-<%=pyenv_version%>-on-postgres-10,<%= source_name + render_branch_name %>-python-tests-on-<%=pyenv_version%>-on-postgres-9.6, <%= source_name + render_branch_name %>-python-tests-on-<%=pyenv_version%>-on-postgres-9.2]
  - task: push-to-cf
    config:
      platform: linux
      inputs:
        - name: <%= source_name + render_branch_name %>
        - name: pipeline-ci
      run:
        path: pipeline-ci/scripts/prepare_to_push_to_cf.sh
        args:
         - "<%= source_name + render_branch_name %>"
  - put: resource-deploy-web-app
    params:
      path: <%= source_name + render_branch_name %>/web/
      manifest: <%= source_name + render_branch_name %>/web/manifest.yml
      current_app_name: <%= source_name + render_branch_name %>
